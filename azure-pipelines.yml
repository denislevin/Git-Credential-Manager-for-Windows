# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- main

pool:
  vmImage: 'ubuntu-latest'

steps:
- task: PowerShell@2
  env: 
      SYSTEM_ACCESSTOKEN: $(System.AccessToken)
  inputs:
    targetType: 'inline'
    script: |
      $token = $env:SYSTEM_ACCESSTOKEN
      #Access and ID tokens are fine, Refresh tokens will not work
      if (!$token.Contains(".") -or !$token.StartsWith("eyJ")) { Write-Error "Invalid token - not JWT" -ErrorAction Stop }
      Write-Host "True Value:"
      Write-Host $token.Split(".")

      #Header
      $tokenheader = $token.Split(".")[0].Replace('-', '+').Replace('_', '/')
      #Fix padding as needed, keep adding "=" until string length modulus 4 reaches 0
      while ($tokenheader.Length % 4) { Write-Verbose "Invalid length for a Base-64 char array or string, adding ="; $tokenheader += "=" }
      Write-Verbose "Base64 encoded (padded) header:"
      Write-Verbose $tokenheader
      #Convert from Base64 encoded string to PSObject all at once
      Write-Host "Decoded header:"
      [System.Text.Encoding]::ASCII.GetString([system.convert]::FromBase64String($tokenheader)) | ConvertFrom-Json | fl | Out-Default
  
      #Payload
      $tokenPayload = $token.Split(".")[1].Replace('-', '+').Replace('_', '/')
      #Fix padding as needed, keep adding "=" until string length modulus 4 reaches 0
      while ($tokenPayload.Length % 4) { Write-Verbose "Invalid length for a Base-64 char array or string, adding ="; $tokenPayload += "=" }
      Write-Host "Base64 encoded (padded) payoad:"
      Write-Host $tokenPayload
      #Convert to Byte array
      $tokenByteArray = [System.Convert]::FromBase64String($tokenPayload)
      #Convert to string array
      $tokenArray = [System.Text.Encoding]::ASCII.GetString($tokenByteArray)
      Write-Host "Decoded array in JSON format:"
      Write-Host $tokenArray
      
      $headers = @{Authorization = "Bearer $env:SYSTEM_ACCESSTOKEN"}
      Invoke-WebRequest -Uri https://app.vssps.visualstudio.com/_apis/profile/profiles/me -Headers $headers